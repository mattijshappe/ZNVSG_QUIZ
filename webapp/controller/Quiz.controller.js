sap.ui.define([
	"vnsg/controller/BaseController",
	"sap/ui/model/json/JSONModel",
	"vnsg/model/formatter",
	"sap/ui/model/Filter",
	"sap/ui/model/FilterOperator",
	"sap/m/MessageToast",
	"sap/m/MessageBox"
], function(BaseController, JSONModel, formatter, Filter, FilterOperator, MessageToast, MessageBox) {
	"use strict";
	return BaseController.extend("vnsg.controller.Quiz", {
		formatter: formatter,
		/* =========================================================== */
		/* lifecycle methods                                           */
		/* =========================================================== */
		/**
		 * Called when the worklist controller is instantiated.
		 * @public
		 */
		onInit: function() {
		// Bind PersonSet OData entity for current user to the view so data can be used in XML elements
		// var quizEntity = "/QuizSet('')";
		// this.getView().bindElement(quizEntity);
		},
		/**
		 * Event handler for navigating back.
		 * We navigate back in the browser historz
		 * @public
		 */
		onNavBack: function() {
			history.go(-1);
		},

		onChangeEmail: function(oEvent) {
			//This code was generated by the layout editor.
			var oEmailAddress = oEvent.getParameter("newValue");
			// The following Regex is NOT a completely correct one and only used for demonstration purposes.
			// RFC 5322 cannot even checked by a Regex and the Regex for RFC 822 is very long and complex.
			var mailregex = /^\w+[\w-+\.]*\@\w+([-\.]\w+)*\.[a-zA-Z]{2,}$/;
			if (oEmailAddress && !oEmailAddress.match(mailregex)) {
				oEvent.getSource().setValueState(sap.ui.core.ValueState.Error);
				oEvent.getSource().setValueStateText("Enter a valid email address");
			} else {
				oEvent.getSource().setValueState(sap.ui.core.ValueState.None);
			}
		},
		onConfirm: function() {
			// collect input controls
			var view = this.getView();
			var inputs = [
				view.byId("idInputEmail") ];

			// check that inputs are not emptqy
			// this does not happen during data binding as this is only triggered by changes
			jQuery.each(inputs, function(i, input) {
				if (!input.getValue()) {
					input.setValueState(sap.ui.core.ValueState.Error);
					input.setValueStateText("Enter an email address");
				}
			});

			// check states of inputs
			var canContinue = true;
			jQuery.each(inputs, function(i, input) {
				if (sap.ui.core.ValueState.Error === input.getValueState()) {
					canContinue = false;
					return false;
				}
			});

			// output result
			var resourceModel = this.getModel("i18n");
			if (canContinue) {
				this.getRouter().navTo("questions",{
					emailAddress:this.getView().byId("idInputEmail").getValue(),
					quizId:this.getView().getBindingContext().getProperty("QuizId") });
	
			} else {
				jQuery.sap.require("sap.m.MessageBox");
				var alertText = resourceModel.getProperty("completeInputMessage");
				MessageBox.error(alertText);
			}

		}
	});

});